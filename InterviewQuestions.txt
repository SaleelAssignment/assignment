Q1) Given the following tables:

mysql> SELECT * FROM runners;
+----+--------------+
| id | name         |
+----+--------------+
|  1 | John Doe     |
|  2 | Jane Doe     |
|  3 | Alice Jones  |
|  4 | Bobby Louis  |
|  5 | Lisa Romero  |
+----+--------------+

mysql> SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

mysql> SELECT * FROM runners WHERE id NOT IN (SELECT winner_id FROM races);

ANS: No Rows
---------------------------------------------------------------------------------------------------------------------------
Q2) Given the following tables:

mysql> SELECT * FROM runners;
+----+--------------+
| id | name         |
+----+--------------+
|  1 | John Doe     |
|  2 | Jane Doe     |
|  3 | Alice Jones  |
|  4 | Bobby Louis  |
|  5 | Lisa Romero  |
+----+--------------+

mysql> SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

mysql> SELECT * FROM runners WHERE id NOT IN (SELECT id FROM races);

ANS: 5, 'Lisa Romero'
---------------------------------------------------------------------------------------------------------------------------
Q3) Given the following tables:

mysql> SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

mysql> SELECT COUNT(WINNER_ID) FROM races;

ANS: 3
---------------------------------------------------------------------------------------------------------------------------
Q4) Given the following tables:

mysql> SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

mysql> SELECT COUNT(winner_id), SUM(1) FROM races;

ANS: 3,	4
---------------------------------------------------------------------------------------------------------------------------
Q5) Given the following tables:

mysql> SELECT * FROM emp;
+----+--------------+------------+
| id | name         | salary     |
+----+--------------+------------+
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  4 | Bobby Louis  | 1200       |
|  5 | Lisa Romero  | 2000       |
+----+--------------+------------+

Write a query to get second higest salary from emp table.

ANS: SELECT max(salary) FROM emp where salary < (select max(salary) from emp);
---------------------------------------------------------------------------------------------------------------------------
Q6) Assume a schema of Emp( Id, Name, DeptId ) , Dept( Id, Name).

If there are 10 records in the Emp table and 5 records in the Dept table, how many rows will be displayed in the result of the following SQL query:

mysql> Select * From Emp, Dept

ANS: 50 rows
---------------------------------------------------------------------------------------------------------------------------
Q7) Given a table TBL with a field Nmbr that has rows with the following values:

    4, 3, 3, 4, 4, 4, 4, 3, 3, 4, 3, 4, 3, 4, 3, 4

Write a query to add False where Nmbr is 3 and add True where Nmbr is 4.

ANS: UPDATE TBL SET Nmbr = case when Nmbr = 3 then False when Nmbr = 4 then True end;
---------------------------------------------------------------------------------------------------------------------------
Q8) Write a SQL query to find the 10th highest employee salary from an Employee( Id, Name, Salary, DeptId ) table.

ANS: SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 9,1;
---------------------------------------------------------------------------------------------------------------------------
Q9) Given a table Users where the column user_id is a unique numeric identifier, how can you efficiently select the first 100 odd user_id values from the table?


ANS; SELECT * FROM Users where user_id mod 2 = 1; OR SELECT * FROM Users where user_id % 2 = 1;
---------------------------------------------------------------------------------------------------------------------------
Q10) Table is as follows:

+----+------------+------------+------------+
| id | c1         | c2         | c3         |
+----+------------+------------+------------+
|  1 | Red        | Yellow     | Blue       |
|  2 | NULL       | Red        | Green      |
|  3 | Yellow     | NULL       | Violet     |
+----+------------+------------+------------+

Print the rows which have ‘Yellow’ in one of the columns C1, C2, or C3, but without using OR.

ANS: SELECT * FROM table WHERE 'Yellow' IN (C1, C2, C3);
---------------------------------------------------------------------------------------------------------------------------
Q11) Write a query to update Col2’s values to look exactly opposite to Col1’s values. 
i.e if Col1’s value is 1 then replace it with 0, Col1’s value is 0 then replace it with 1.

mysql> SELECT * FROM tbl;
+------+------+
| col1 | col2 |
+------+------+
| 1    |      |
| 0    |      |
| 0    |      |
| 1    |      |
| 0    |      |
| 0    |      |
| 0    |      |
| 1    |      |
| 0    |      |
+------+------+

ANS: UPDATE TBL SET col2 = CASE WHEN col1 = 0 THEN 1 WHEN col1=1 THEN 0 END;
---------------------------------------------------------------------------------------------------------------------------
Q12) Imagine a single column in a table that is populated with either a single digit (0-9) or a single character (a-z, A-Z). Write a SQL query to print ‘Fizz’ for a numeric value or ‘Buzz’ for alphabetical value for all values in that column.

Example:

['d', 'x', 'T', 8, 'a', 9, 6, 2, 'V']

…should output:

['Buzz', 'Buzz', 'Buzz', 'Fizz', 'Buzz','Fizz', 'Fizz', 'Fizz', 'Buzz']

ANS: SELECT col1, if(ascii(col1)>=97 and ascii(col1)<=122 or ascii(col1)>=65 and ascii(col1)<=90, "Buzz", "Fizz")  FROM TBL;
---------------------------------------------------------------------------------------------------------------------------
Q13) Given the following tables:

mysql> SELECT * FROM emp;
+----+--------------+------------+
| id | name         | salary     |
+----+--------------+------------+
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  4 | Bobby Louis  | 1200       |
|  5 | Lisa Romero  | 2000       |
|  6 | Bobby Deol   | 3500       |
|  7 | Lisa Smith   | 2000       |
+----+--------------+------------+

Write a query to get the list of employees with same salary.

ANS: SELECT  distinct a.* FROM emp a, emp b WHERE a.salary = b.salary and a.id <> b.id;
---------------------------------------------------------------------------------------------------------------------------
Q14) Given the following tables:

mysql> SELECT * FROM emp;
+----+--------------+------------+
| id | name         | salary     |
+----+--------------+------------+
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  4 | Bobby Louis  | 1200       |
|  5 | Lisa Romero  | 2000       |
|  6 | Bobby Deol   | 3500       |
|  7 | Lisa Smith   | 2000       |
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  4 | Bobby Louis  | 1200       |
+----+--------------+------------+

Write a query to find duplicate records in EMP table.

ANS: SELECT id, name, salary FROM emp GROUP BY id, name, salary HAVING count(*)>=2;
---------------------------------------------------------------------------------------------------------------------------
Q15) Given the following tables:

mysql> SELECT * FROM emp;
+----+--------------+------------+
| id | name         | salary     |
+----+--------------+------------+
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  4 | Bobby Louis  | 1200       |
|  5 | Lisa Romero  | 2000       |
|  6 | Bobby Deol   | 3500       |
|  7 | Lisa Smith   | 2000       |
+----+--------------+------------+

Write a query to show one row twice in results from a table.

ANS: (SELECT * FROM emp LIMIT 1) UNION ALL (SELECT * FROM emp LIMIT 1);
---------------------------------------------------------------------------------------------------------------------------
Q16) Given the following tables:

mysql> SELECT * FROM runners;
+----+--------------+
| id | name         |
+----+--------------+
|  1 | John Doe     |
|  2 | Jane Doe     |
|  3 | Alice Jones  |
|  4 | Bobby Louis  |
|  5 | Lisa Romero  |
+----+--------------+
Write a query to get random runners record from the table.

ANS: SELECT * FROM runners ORDER BY rand() LIMIT 1;
---------------------------------------------------------------------------------------------------------------------------
Q17) Given these contents of the Customers table:

mysql> SELECT * FROM Customers;
+----+---------------+------------+
| id | name          | ReferredBy |
+----+---------------+------------+
|  1 | John Doe      |       NULL |
|  2 | Jane Smith    |       NULL |
|  3 | Anne Jenkins  |          2 |
|  4 | Eric Branford |       NULL |
|  5 | Pat Richards  |          1 |
|  6 | Alice Barnes  |          2 |
+----+---------------+------------+

What will be the result of the following query?

mysql> SELECT Name FROM Customers WHERE ReferredBy <> 2;

ANS: 'Pat Richards'
---------------------------------------------------------------------------------------------------------------------------
Q18) Given the following tables:

mysql> SELECT * FROM test_a;
+------+
| id   |
+------+
|   10 |
|   20 |
|   30 |
|   40 |
|   50 |
+------+

mysql> SELECT * FROM test_b;
+------+
| id   |
+------+
|   10 |
|   30 |
|   50 |
+------+

Write a query to fetch values in table test_a that are and not in test_b.

ANS: SELECT * FROM test_a a WHERE not exists (SELECT * FROM test_b b WHERE a.id = b.id);

---------------------------------------------------------------------------------------------------------------------------
Q19) Given these contents of the Customers table:

mysql> SELECT * FROM Customers;
+----+---------------+------------+
| id | name          | ReferredBy |
+----+---------------+------------+
|  1 | John Doe      |       NULL |
|  2 | Jane Smith    |       NULL |
|  3 | Anne Jenkins  |          2 |
|  4 | Eric Branford |       NULL |
|  5 | Pat Richards  |          1 |
|  6 | Alice Barnes  |          2 |
+----+---------------+------------+

Write a SQL statement to concatenate all the customer names into the following single comma string:
e.g. 'John Doe,Jane Smith,Anne Jenkins,Eric Branford,Pat Richards,Alice Barnes'


ANS: SELECT group_concat(name) FROM Customers;

---------------------------------------------------------------------------------------------------------------------------
Q20) Given the following tables:

mysql> SELECT * FROM mass_table;
+---------+
| weight  |
+---------+
|    5.67 |
|      34 |
|  34.567 |
| 365.253 |
+---------+

Write a query to show the following output.

+---------+-----+------+
| weight  | kg  | gms  |
+---------+-----+------+
|    5.67 |   5 | 67   |
|      34 |  34 | 34   |
|  34.567 |  34 | 567  |
| 365.253 | 365 | 253  |
+---------+-----+------+


ANS: SELECT weight, truncate(weight,0) as kg, mid(weight, instr(weight,".") + 1) as gms FROM mass_table;