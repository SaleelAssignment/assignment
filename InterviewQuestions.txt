Q1) Given the following tables:

sql> SELECT * FROM runners;
+----+--------------+
| id | name         |
+----+--------------+
|  1 | John Doe     |
|  2 | Jane Doe     |
|  3 | Alice Jones  |
|  4 | Bobby Louis  |
|  5 | Lisa Romero  |
+----+--------------+

sql> SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

SQL> SELECT * FROM runners WHERE id NOT IN (SELECT winner_id FROM races);

ANS: No Rows
---------------------------------------------------------------------------------------------------------------------------
Q2) Given the following tables:

sql> SELECT * FROM runners;
+----+--------------+
| id | name         |
+----+--------------+
|  1 | John Doe     |
|  2 | Jane Doe     |
|  3 | Alice Jones  |
|  4 | Bobby Louis  |
|  5 | Lisa Romero  |
+----+--------------+

sql> SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

SQL> SELECT * FROM runners WHERE id NOT IN (SELECT id FROM races);

ANS: 5, 'Lisa Romero'
---------------------------------------------------------------------------------------------------------------------------
Q3) Given the following tables:

SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

SQL> SELECT COUNT(WINNER_ID) FROM races;

ANS: 3
---------------------------------------------------------------------------------------------------------------------------
Q4) Given the following tables:

SELECT * FROM races;
+----+----------------+-----------+
| id | event          | winner_id |
+----+----------------+-----------+
|  1 | 100 meter dash |  2        |
|  2 | 500 meter dash |  3        |
|  3 | cross-country  |  2        |
|  4 | triathalon     |  NULL     |
+----+----------------+-----------+

What will be the output of the following statement?

SQL> SELECT COUNT(winner_id), SUM(1) FROM races;

ANS: 3,	4
---------------------------------------------------------------------------------------------------------------------------
Q5) Given the following tables:

sql> SELECT * FROM emp;
+----+--------------+------------+
| id | name         | salary     |
+----+--------------+------------+
|  1 | John Doe     | 3500       |
|  2 | Jane Doe     | 2000       |
|  3 | Alice Jones  | 3200       |
|  4 | Bobby Louis  | 1200       |
|  5 | Lisa Romero  | 2000       |
+----+--------------+------------+

Write a query to get second higest salary from emp table.

ANS: SELECT max(salary) FROM emp where salary < (select max(salary) from emp);
---------------------------------------------------------------------------------------------------------------------------
Q6) Assume a schema of Emp( Id, Name, DeptId ) , Dept( Id, Name).

If there are 10 records in the Emp table and 5 records in the Dept table, how many rows will be displayed in the result of the following SQL query:

Select * From Emp, Dept

ANS: 50 rows
---------------------------------------------------------------------------------------------------------------------------
Q7) Given a table TBL with a field Nmbr that has rows with the following values:

    4, 3, 3, 4, 4, 4, 4, 3, 3, 4, 3, 4, 3, 4, 3, 4

Write a query to add False where Nmbr is 3 and add True where Nmbr is 4.

ANS: UPDATE TBL SET Nmbr = case when Nmbr = 3 then False when Nmbr = 4 then True end;
---------------------------------------------------------------------------------------------------------------------------
Q8) Write a SQL query to find the 10th highest employee salary from an Employee( Id, Name, Salary, DeptId ) table.

ANS: SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 9,1;
---------------------------------------------------------------------------------------------------------------------------
Q9) Given a table Users where the column user_id is a unique numeric identifier, how can you efficiently select the first 100 odd user_id values from the table?


ANS; SELECT * FROM Users where user_id mod 2 = 1; OR SELECT * FROM Users where user_id % 2 = 1;
---------------------------------------------------------------------------------------------------------------------------
Q10) Table is as follows:

+----+------------+------------+------------+
| id | c1         | c2         | c3         |
+----+------------+------------+------------+
|  1 | Red        | Yellow     | Blue       |
|  2 | NULL       | Red        | Green      |
|  3 | Yellow     | NULL       | Violet     |
+----+------------+------------+------------+

Print the rows which have ‘Yellow’ in one of the columns C1, C2, or C3, but without using OR.

ANS: SELECT * FROM table WHERE 'Yellow' IN (C1, C2, C3);
---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------

